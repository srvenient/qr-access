[project]
name = "qr-access-backend"
version = "0.0.1"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "bcrypt>=4.3.0",
    "fastapi[standard]>=0.116.1",
    "httpx>=0.28.1",
    "psycopg[binary]>=3.2.9",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "pyjwt>=2.10.1",
    "sentry-sdk[fastapi]>=2.34.1",
    "sqlmodel>=0.0.24",
    "tenacity>=9.1.2",
]

[tool.uv]
dev-dependencies = [
    "pytest>=8.4.1",
    "mypy>=1.17.1",
    "ruff>=0.12.8",
    "pre-commit>=4.3.0",
    "types-passlib>=1.7.7.20250602",
    "coverage>=7.10.3",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
strict = true
exclude = ["venv", ".venv"]

[tool.hatch.build]
packages = ["app"]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
